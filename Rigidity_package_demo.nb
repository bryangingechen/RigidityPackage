(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     66411,       1901]
NotebookOptionsPosition[     58146,       1672]
NotebookOutlinePosition[     61093,       1739]
CellTagsIndexPosition[     61050,       1736]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["The ",
  FontFamily->"Palatino Bold Italic"],
 StyleBox["Rigidity",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox[" Package\n",
  FontFamily->"Palatino Bold Italic"]
}], "Title",
 CellChangeTimes->{{3.5652090817594748`*^9, 3.5652091031011753`*^9}, {
  3.565209154635601*^9, 3.5652091709229307`*^9}, {3.565210060981402*^9, 
  3.565210062269986*^9}, {3.5652130689733753`*^9, 3.565213183690954*^9}, {
  3.565213233928138*^9, 3.5652132757579193`*^9}, {3.5652821632262373`*^9, 
  3.5652821949074306`*^9}, {3.5653831894375668`*^9, 3.565383234423769*^9}, {
  3.617698558147656*^9, 3.617698575049124*^9}, {3.6177008506921873`*^9, 
  3.617700853018684*^9}, {3.6179007728272963`*^9, 3.617900774034544*^9}}],

Cell[CellGroupData[{

Cell["Setup and Initialization", "Section",
 CellChangeTimes->{{3.5652091146627073`*^9, 3.565209121340279*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Rigidity",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " package can be loaded by the following (so long as \
\[OpenCurlyDoubleQuote]Rigidity.m\[CloseCurlyDoubleQuote] is in the same \
directory as the notebook)"
}], "Text",
 CellChangeTimes->{{3.5652115305814543`*^9, 3.565211611010075*^9}, {
  3.617700860568342*^9, 3.617700862232914*^9}, {3.617703165689076*^9, 
  3.617703167699513*^9}, {3.617900776057371*^9, 3.617900780889447*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<Rigidity.m\>\""}]}], "Input",
 CellFrame->None,
 CellChangeTimes->{{3.565209125274817*^9, 3.565209128580862*^9}, {
   3.565209788664366*^9, 3.565209795905636*^9}, 3.565212650783688*^9, 
   3.565212815413797*^9, {3.6177008657794247`*^9, 3.6177008676502113`*^9}, {
   3.617900777994821*^9, 3.6179007784423447`*^9}, {3.6181229718160543`*^9, 
   3.618122973230056*^9}},
 Background->RGBColor[0.961013, 0.979904, 0.999893]],

Cell[TextData[{
 "If the file \[OpenCurlyDoubleQuote]Rigidity.m\[CloseCurlyDoubleQuote] is \
copied to your ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s \[OpenCurlyDoubleQuote]Application\
\[CloseCurlyDoubleQuote] directory,"
}], "Text",
 CellChangeTimes->{{3.565211632033736*^9, 3.565211639689479*^9}, {
  3.565212440611661*^9, 3.565212502944764*^9}, {3.617700869024459*^9, 
  3.617700873336665*^9}, {3.6179007835931396`*^9, 3.617900783913229*^9}}],

Cell[BoxData[
 RowBox[{"FileNameJoin", "[", 
  RowBox[{"{", 
   RowBox[{"$UserBaseDirectory", ",", "\"\<Applications\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.565212367448593*^9, 3.565212382400346*^9}}],

Cell["via the command,", "Text",
 CellChangeTimes->{{3.565212512937299*^9, 3.565212514954323*^9}, {
  3.565212828515242*^9, 3.565212830011305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "[", 
     RowBox[{"FileExistsQ", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
         "\"\<Rigidity.m\>\""}], "}"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"CopyFile", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Rigidity.m\>\""}],
         "}"}], "]"}], ",", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
         "\"\<Rigidity.m\>\""}], "}"}], "]"}]}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.565212592199563*^9, 3.565212615336334*^9}, {
  3.565212662630149*^9, 3.5652127022890472`*^9}, {3.5652127528963127`*^9, 
  3.565212812591329*^9}, {3.565729975479938*^9, 3.565729985908698*^9}, {
  3.617700879716806*^9, 3.617700889980342*^9}, {3.617900787483755*^9, 
  3.6179007932035418`*^9}}],

Cell[TextData[{
 "then \[OpenCurlyDoubleQuote]",
 StyleBox["<<\[CloseCurlyDoubleQuote]Rigidity.m\[CloseCurlyDoubleQuote]",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] can be used in ",
 StyleBox["any",
  FontSlant->"Italic"],
 " notebook without any further initialization."
}], "Text",
 CellChangeTimes->{{3.565212521123361*^9, 3.565212546183033*^9}, {
  3.565212838598174*^9, 3.5652128553860817`*^9}, {3.565213342027919*^9, 
  3.565213343012115*^9}, {3.617700891896194*^9, 3.617700893655954*^9}, {
  3.617900794969013*^9, 3.617900795281142*^9}, {3.6181229765822906`*^9, 
  3.618122978390237*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Operations", "Section",
 CellChangeTimes->{{3.5652092470049553`*^9, 3.565209275686325*^9}}],

Cell[CellGroupData[{

Cell["Working with non-periodic frameworks", "Subsection",
 CellChangeTimes->{{3.5652092969203653`*^9, 3.565209319671287*^9}, {
  3.565209368323501*^9, 3.565209383096757*^9}, {3.565212975674179*^9, 
  3.56521304010045*^9}, {3.617703230394824*^9, 3.61770323914959*^9}, {
  3.617703319970647*^9, 3.6177033290128727`*^9}}],

Cell[CellGroupData[{

Cell["Framework data", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}}],

Cell[TextData[{
 "A d-dimensional framework consists of a graph G = (V,E), and an embedding \
of the vertices V into ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "d"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.565210459907535*^9, 3.565210634430972*^9}, {
  3.617705627309507*^9, 3.6177056864512787`*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Rigidity",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " package uses adjacency lists to specify the underlying graph of a \
framework.  Each element of the list corresponds to an edge and contains \
three pieces of information.  The first is the pair of vertex indices that \
are joined by the edge.  The second is a labeling of the edge.  For \
non-periodic graphs, this label will be empty.  The final piece is a dummy \
slot which could be used to store, e.g. a spring constant."
}], "Text",
 CellChangeTimes->{{3.565210049504622*^9, 3.5652100587738934`*^9}, {
   3.565210122999618*^9, 3.565210232704835*^9}, {3.565210281650625*^9, 
   3.565210341861937*^9}, {3.565210526929079*^9, 3.565210527144635*^9}, 
   3.565210710158358*^9, {3.6177052985543613`*^9, 3.617705526978643*^9}, {
   3.617705731005972*^9, 3.617705750101577*^9}, {3.617900815256464*^9, 
   3.6179008155845003`*^9}, {3.617916865757616*^9, 3.617916867301646*^9}}],

Cell["\<\
Here is an example of the edge data for a triangular graph in 2D.\
\>", "Text",
 CellChangeTimes->{{3.617705711848259*^9, 3.617705718646366*^9}, {
  3.617705753621463*^9, 3.617705755149379*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"triangleedgedat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "1"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.565210389315666*^9, 3.56521044950493*^9}, {
   3.5652107451901817`*^9, 3.565210749198234*^9}, 3.565212902239922*^9, {
   3.61770553115783*^9, 3.617705571068742*^9}, {3.617916852720093*^9, 
   3.617916860120161*^9}}],

Cell["\<\
The embedding of the vertices is stored as a list of d-dimensional vectors.\
\>", "Text",
 CellChangeTimes->{{3.6177056951291323`*^9, 3.617705708454883*^9}, {
  3.61770576457295*^9, 3.617705765916897*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trianglepos", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.565210422352372*^9, 3.565210424625228*^9}, {
  3.5652109443672953`*^9, 3.565210954225286*^9}, {3.617705769686944*^9, 
  3.6177057803514233`*^9}}],

Cell[TextData[{
 "The function ",
 StyleBox["EdgeLengthsSq",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " outputs the squared lengths of each of the edges:"
}], "Text",
 CellChangeTimes->{{3.6177081300982533`*^9, 3.617708160334412*^9}, {
  3.617916313857964*^9, 3.617916322001519*^9}}],

Cell[BoxData[
 RowBox[{"EdgeLengthsSq", "[", 
  RowBox[{"trianglepos", ",", 
   RowBox[{"{", "}"}], ",", "triangleedgedat"}], "]"}]], "Input",
 CellChangeTimes->{{3.617708162970827*^9, 3.617708173719759*^9}, {
  3.617916324210099*^9, 3.617916328674172*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making pictures", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.6179438200786953`*^9, 
  3.6179438220221663`*^9}}],

Cell[TextData[{
 "The function ",
 StyleBox["PlotPacking",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " can draw a picture of a 2D framework:"
}], "Text",
 CellChangeTimes->{{3.6177058036831503`*^9, 3.617705836391508*^9}}],

Cell[BoxData[
 RowBox[{"PlotPacking", "[", 
  RowBox[{"trianglepos", ",", "triangleedgedat", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", 
     RowBox[{"PointSize", "\[Rule]", ".1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Thickness", "\[Rule]", ".05"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565210422352372*^9, 3.565210424625228*^9}, {
  3.5652109443672953`*^9, 3.565210954225286*^9}, {3.617705769686944*^9, 
  3.6177057803514233`*^9}, {3.6177058465611763`*^9, 3.6177058745991697`*^9}, {
  3.617705928431918*^9, 3.617705932334587*^9}, {3.617706033016734*^9, 
  3.617706057734831*^9}, {3.617706092337435*^9, 3.617706143342968*^9}, {
  3.617916937997458*^9, 3.617916943536977*^9}}],

Cell[TextData[{
 "Similarly, ",
 StyleBox["PlotPacking3D",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " makes a picture of a 3D framework:"
}], "Text",
 CellChangeTimes->{{3.6177067392263613`*^9, 3.617706763159362*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tetrahedronpos", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tetrahedronedgedat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotPacking3D", "[", 
  RowBox[{"tetrahedronpos", ",", "tetrahedronedgedat", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", 
     RowBox[{"PointSize", "\[Rule]", ".1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Thickness", "\[Rule]", ".05"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.617706770506111*^9, 3.617706874316162*^9}, {
  3.617707046318021*^9, 3.617707056933557*^9}, {3.61791695242904*^9, 
  3.617916973592884*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rigidity matrices", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.617943831557437*^9, 
  3.617943834470009*^9}}],

Cell["\<\
The linear rigidity of a framework is completely determined by the properties \
of the rigidity matrix (often called the compatibility matrix).  This matrix \
is the Jacobian of the length function on the edges of the framework.\
\>", "Text",
 CellChangeTimes->{{3.617706200858259*^9, 3.617706263097577*^9}, 
   3.6177067230491962`*^9}],

Cell[TextData[{
 "The function ",
 StyleBox["RigidityMatrix",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " computes this matrix.  For 2D non-periodic frameworks it should be called \
as below."
}], "Text",
 CellChangeTimes->{{3.617706294023012*^9, 3.617706343804584*^9}, {
  3.617706711515031*^9, 3.6177067121128693`*^9}}],

Cell[BoxData[
 RowBox[{"triangleR", "=", 
  RowBox[{"RigidityMatrix", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "trianglepos", ",", 
    RowBox[{"{", "}"}], ",", "triangleedgedat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6177062645891314`*^9, 3.6177062912341623`*^9}, {
  3.61770658142655*^9, 3.617706591211533*^9}, {3.6177069498887167`*^9, 
  3.617706953382864*^9}, {3.617706990068363*^9, 3.617707001416122*^9}, {
  3.6177074657610273`*^9, 3.617707467513554*^9}, {3.617707761879075*^9, 
  3.617707762005183*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", "triangleR", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.617706596769886*^9, 3.617706597877*^9}, {
  3.617706698895692*^9, 3.617706700483403*^9}, {3.617707471399633*^9, 
  3.6177074725272284`*^9}}],

Cell["\<\
The space of floppy modes and self-stresses can then be computed via linear \
algebra:\
\>", "Text",
 CellChangeTimes->{{3.617707432205799*^9, 3.617707460509287*^9}}],

Cell[BoxData[
 RowBox[{"NullSpace", "[", "triangleR", "]"}]], "Input",
 CellChangeTimes->{{3.6177074930260143`*^9, 3.617707497687132*^9}}],

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"Transpose", "[", "triangleR", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.617707505760805*^9, 3.617707512845945*^9}}],

Cell["For a 3D non-periodic framework:", "Text",
 CellChangeTimes->{{3.617706915622991*^9, 3.617706918500889*^9}, {
  3.617707009573842*^9, 3.617707010798211*^9}}],

Cell[BoxData[
 RowBox[{"tetrahedronR", "=", 
  RowBox[{"RigidityMatrix", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "tetrahedronpos", ",", 
    RowBox[{"{", "}"}], ",", "tetrahedronedgedat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.617706919755164*^9, 3.6177069363106728`*^9}, {
  3.61770700718592*^9, 3.61770703479151*^9}, {3.617707476112569*^9, 
  3.61770747768884*^9}, {3.617707779588726*^9, 3.6177077804641027`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", "tetrahedronR", "]"}], "//", "MatrixForm"}]], "Input",\

 CellChangeTimes->{{3.61770706201588*^9, 3.617707065216372*^9}, {
  3.617707480566051*^9, 3.617707486068864*^9}}],

Cell["\<\
The dynamical matrix and hence normal modes can be computed by multiplying \
the rigidity matrix by its transpose.  
One also needs to sandwich a diagonal matrix whose entries are the physical \
spring constants divided by the edge lengths squared.\
\>", "Text",
 CellChangeTimes->{{3.617707082679248*^9, 3.617707107969164*^9}, {
  3.617707384808923*^9, 3.617707418742128*^9}, {3.617707855714923*^9, 
  3.617707878120021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tetrahedronD", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "tetrahedronR", "]"}], ".", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"1", "/", 
      RowBox[{"EdgeLengthsSq", "[", 
       RowBox[{"tetrahedronpos", ",", 
        RowBox[{"{", "}"}], ",", "tetrahedronedgedat"}], "]"}]}], "]"}], ".", 
    "tetrahedronR"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6177075249947*^9, 3.6177075445983143`*^9}, {
  3.6177078262116957`*^9, 3.617707835129916*^9}, {3.617708220348301*^9, 
  3.617708240830003*^9}, {3.6179162908264303`*^9, 3.617916302388254*^9}}],

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", "tetrahedronD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tetrahedronModes", "=", 
   RowBox[{"Eigenvectors", "[", "tetrahedronD", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"tetrahedronModes", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.617707539494124*^9, 3.6177075485106773`*^9}, {
  3.6177077890459833`*^9, 3.61770781533305*^9}}],

Cell[TextData[{
 "The modes can be plotted with ",
 StyleBox["PlotPackingVec",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["PlotPackingVec3D",
  FontFamily->"Courier",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.617708718627837*^9, 3.617708761322174*^9}}],

Cell[BoxData[
 RowBox[{"PlotPackingVec3D", "[", 
  RowBox[{"tetrahedronpos", ",", "tetrahedronedgedat", ",", 
   RowBox[{".1", 
    RowBox[{"tetrahedronModes", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", 
     RowBox[{"PointSize", "\[Rule]", ".06"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Thickness", "\[Rule]", ".02"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Red", ",", 
     RowBox[{"Thickness", "\[Rule]", ".02"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617708657490443*^9, 3.6177086757463083`*^9}, {
  3.617708709999082*^9, 3.617708710309827*^9}, {3.618123005633502*^9, 
  3.618123013919594*^9}, {3.618123055303897*^9, 3.618123076142541*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Periodic frameworks", "Subsection",
 CellChangeTimes->{{3.565211479937498*^9, 3.565211510543717*^9}, {
  3.617703248904142*^9, 3.6177032510611067`*^9}}],

Cell[CellGroupData[{

Cell["Framework data", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}}],

Cell["\<\
We will work with three example periodic frameworks, two in 2D, and one in \
3D.  In each case, the position data is given as a list of coordinates for \
the vertices in a single fundamental domain.\
\>", "Text",
 CellChangeTimes->{{3.617904698678998*^9, 3.617904704653985*^9}, {
  3.617905430934023*^9, 3.617905473084118*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"chainpos", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"squarepos", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cubepos", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617905476342428*^9, 3.617905538851658*^9}}],

Cell[TextData[{
 "A periodic framework requires not just the positions of the vertices but \
also the basis vectors of the lattice.  This is input as a list of d vectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["b", "1"], ",", "...", ",", 
     SubscriptBox["b", "d"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for a d-periodic lattice: "
}], "Text",
 CellChangeTimes->{{3.617904228020657*^9, 3.617904304752428*^9}, {
  3.617904547382291*^9, 3.617904555957793*^9}, {3.617904599356111*^9, 
  3.6179046076375523`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"chainbasis", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"squarebasis", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cubebasis", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "2"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6179043113876543`*^9, 3.617904351535198*^9}, {
  3.6179075481157837`*^9, 3.617907548481447*^9}}],

Cell[TextData[{
 "The edge data of a periodic framework is encoded by giving a list of edges \
in a fundamental domain of the lattice.  Each edge is given as a list of \
three pieces of data.  The first piece is a (now ordered) pair of vertices ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["p", "1"], ",", 
     SubscriptBox["p", "2"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", the second piece of data is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["m", "1"], ",", "...", ",", 
     SubscriptBox["m", "d"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so that a vector pointing along the edge from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["p", "2"], "-", 
        SubscriptBox["p", "1"]}], ")"}], "+", 
      RowBox[{
       SubscriptBox["m", "1"], 
       SubscriptBox["b", "1"]}], "+"}], "..."}], "+", 
    RowBox[{
     SubscriptBox["m", "d"], 
     SubscriptBox["b", "d"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and the third is again a dummy slot."
}], "Text",
 CellChangeTimes->{{3.61790371581001*^9, 3.6179038683807287`*^9}, {
   3.617904191116095*^9, 3.617904225388524*^9}, {3.6179043575990973`*^9, 
   3.617904414361794*^9}, {3.6179045268543987`*^9, 3.6179046670953207`*^9}, 
   3.617905441012918*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"chainedgedat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", "1", "}"}], ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"squareedgedat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cubeedgedat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617905546495409*^9, 3.617905581932035*^9}, {
  3.617907424309*^9, 3.61790760319724*^9}, {3.6179089803286047`*^9, 
  3.61790910337595*^9}, {3.617909140143998*^9, 3.617909178547483*^9}, {
  3.6179094097724743`*^9, 3.617909485537087*^9}, {3.617909562420618*^9, 
  3.617909571389697*^9}, {3.617909610618059*^9, 3.6179097695368834`*^9}, {
  3.617910156782424*^9, 3.61791015940376*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making pictures", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.617943848999332*^9, 
  3.617943851525877*^9}}],

Cell[TextData[{
 "These frameworks can be drawn with the ",
 StyleBox["PlotPeriodicPacking",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["PlotPeriodicPacking3D",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " functions.  We can plot multiple copies of each unit cell to better depict \
the periodicity if we wish:"
}], "Text",
 CellChangeTimes->{{3.617909782049609*^9, 3.617909872270178*^9}}],

Cell[BoxData[{
 RowBox[{"PlotPeriodicPacking", "[", 
  RowBox[{"chainpos", ",", "chainbasis", ",", "chainedgedat", ",", 
   RowBox[{"{", "3", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotPeriodicPacking", "[", 
  RowBox[{"squarepos", ",", "squarebasis", ",", "squareedgedat", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotPeriodicPacking3D", "[", 
  RowBox[{"cubepos", ",", "cubebasis", ",", "cubeedgedat", ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.617909873414851*^9, 3.6179099106315613`*^9}, {
  3.6179100247687693`*^9, 3.617910025512443*^9}, {3.617910193209877*^9, 
  3.6179102026724567`*^9}, {3.617910434571125*^9, 3.617910474098467*^9}, {
  3.617910584150853*^9, 3.61791058481693*^9}, {3.6179106585006933`*^9, 
  3.617910665260549*^9}, {3.617910792826824*^9, 3.617910804369383*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rigidity matrices", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.617943857045856*^9, 
  3.6179438601895123`*^9}}],

Cell["\<\
Two types of rigidity matrices can be computed.  The ordinary \
\[OpenCurlyDoubleQuote]Bloch\[CloseCurlyDoubleQuote]-type:\
\>", "Text",
 CellChangeTimes->{{3.617910681804583*^9, 3.6179107035820103`*^9}}],

Cell[BoxData[
 RowBox[{"RigidityMatrix", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "k"}], "]"}], "}"}], ",", "chainpos", ",", 
   "chainbasis", ",", "chainedgedat"}], "]"}]], "Input",
 CellChangeTimes->{{3.617910711995714*^9, 3.617910733519865*^9}, {
  3.617910808793861*^9, 3.6179108598373737`*^9}}],

Cell["The \[OpenCurlyDoubleQuote]fixed-lattice\[CloseCurlyDoubleQuote] \
type:", "Text",
 CellChangeTimes->{{3.617910705694078*^9, 3.617910709662467*^9}}],

Cell[BoxData[
 RowBox[{"RigidityMatrix", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", "chainpos", ",", "chainbasis", ",", 
   "chainedgedat", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.617914175474051*^9, 3.61791417663347*^9}, 
   3.617915829483306*^9}],

Cell[BoxData[
 RowBox[{"Normal", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.617915790628788*^9, 3.617915792382522*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Visualizing the modes in a 2D Brillouin zone\
\>", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.617943866349478*^9, 
  3.617943868420836*^9}, {3.617943950712166*^9, 3.617943962830038*^9}, {
  3.6179463592761927`*^9, 3.617946392259803*^9}, {3.617946479938772*^9, 
  3.617946482214526*^9}, {3.6179472534050913`*^9, 3.617947261476214*^9}, {
  3.6179475601483297`*^9, 3.6179475611943493`*^9}, {3.617948441518923*^9, 
  3.6179484418607187`*^9}}],

Cell[TextData[{
 "The function ",
 StyleBox["BandPlot",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " makes contour plots of functions in the Brillouin zone.  Here is how to \
use it to look at various eigenmodes:"
}], "Text",
 CellChangeTimes->{{3.6179472664126453`*^9, 3.617947342886507*^9}, {
  3.617948447074368*^9, 3.617948475707522*^9}}],

Cell[BoxData[
 RowBox[{"squarepos2", "=", 
  RowBox[{"squarepos", "+", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", ".5"}], ",", ".5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6179470109075212`*^9, 3.617947043934402*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"squareR", "=", 
   RowBox[{"RigidityMatrix", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zx", ",", "zy"}], "}"}], ",", "squarepos2", ",", "squarebasis",
      ",", "squareedgedatbalanced"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", "squareR", "]"}], ".", "squareR"}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"BandPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"zx", ",", "zy"}], "}"}], ",", 
   RowBox[{"Re", "[", "poly", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"BandPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"zx", ",", "zy"}], "}"}], ",", 
   RowBox[{"Im", "[", "poly", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.617947550110404*^9, 3.617947554007531*^9}, {
  3.617947597071219*^9, 3.617947610717393*^9}, {3.617947647223126*^9, 
  3.617947701913658*^9}, {3.617947782759036*^9, 3.6179478143538313`*^9}, {
  3.617947845220573*^9, 3.617947881885648*^9}, {3.617947913362732*^9, 
  3.617948001564188*^9}, {3.6179482594077997`*^9, 3.617948261490904*^9}, {
  3.617948350908333*^9, 3.6179483678634987`*^9}, {3.617948486802868*^9, 
  3.6179484943669233`*^9}, {3.6179486676794653`*^9, 3.617948689698794*^9}, {
  3.617948760563745*^9, 3.617948761585183*^9}, {3.617948943417861*^9, 
  3.617948951380517*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Tools for laying out frameworks\
\>", "Section",
 CellChangeTimes->{{3.565283350437929*^9, 3.5652833798428*^9}, {
  3.6177033732091007`*^9, 3.617703385351859*^9}, {3.617949226831197*^9, 
  3.617949246737296*^9}}],

Cell["\<\
Frameworks from point configurations\
\>", "Subsection",
 CellChangeTimes->{{3.565392011654352*^9, 3.565392039037265*^9}, 
   3.617946360875455*^9, {3.617949449058597*^9, 3.6179494544339447`*^9}}],

Cell["\<\
Built-in lattice framework functions\
\>", "Subsection",
 CellChangeTimes->{{3.565392011654352*^9, 3.565392039037265*^9}, 
   3.617946360875455*^9, {3.617949456674674*^9, 3.6179494602484093`*^9}, {
   3.617951263463318*^9, 3.617951278270973*^9}}],

Cell[CellGroupData[{

Cell["Covers of periodic frameworks", "Subsection",
 CellChangeTimes->{{3.565392011654352*^9, 3.565392039037265*^9}, 
   3.617946360875455*^9, {3.617949456674674*^9, 3.6179494602484093`*^9}, {
   3.6179499832027187`*^9, 3.617949993326149*^9}, {3.617951260440075*^9, 
   3.617951261303451*^9}}],

Cell["\<\
Given a periodic framework it is often useful to construct coverings of this \
framework (i.e. a periodic framework whose unit cell consists of some number \
of copies of the original unit cell in different directions).\
\>", "Text",
 CellChangeTimes->{{3.617951238202546*^9, 3.617951326654683*^9}, {
  3.6179550619438353`*^9, 3.61795507168293*^9}}],

Cell[TextData[{
 "The functions ",
 StyleBox["MakePerLattice",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["MakePerLatticeEdges",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " can do this:"
}], "Text",
 CellChangeTimes->{{3.617951334456278*^9, 3.617951425411458*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"squarecover", "=", 
   RowBox[{"MakePerLattice", "[", 
    RowBox[{"squarepos2", ",", "squarebasis", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"squarecoveredgedat", "=", 
   RowBox[{"MakePerLatticeEdges", "[", 
    RowBox[{"squareedgedat", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", "True"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.6179514409302807`*^9, 3.6179515074278517`*^9}, {
   3.617954465805809*^9, 3.617954466481208*^9}, 3.617960796648576*^9, 
   3.617961361120019*^9}],

Cell[BoxData[
 RowBox[{"PlotPeriodicPacking", "[", 
  RowBox[{"squarecover", ",", 
   RowBox[{"squarebasis", "*", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}]}], ",", "squarecoveredgedat"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.617954393418215*^9, 3.617954444295019*^9}}],

Cell["\<\
To truncate the periodic edges at the boundary, use the following (this is \
the default behavior if the final argument is omitted):\
\>", "Text",
 CellChangeTimes->{{3.6179544806766157`*^9, 3.617954497466423*^9}, {
  3.6179575941714077`*^9, 3.617957612457759*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"squarecovernonperiodicedgedat", "=", 
   RowBox[{"MakePerLatticeEdges", "[", 
    RowBox[{"squareedgedat", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", "False"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.617954511686358*^9, 3.617954518974497*^9}, {
  3.6179575574386177`*^9, 3.617957576117744*^9}}],

Cell[BoxData[
 RowBox[{"PlotPacking", "[", 
  RowBox[{"squarecover", ",", "squarecovernonperiodicedgedat"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.61795452769413*^9, 3.61795453688585*^9}}]
}, Open  ]],

Cell["Cutting and gluing frameworks", "Subsection",
 CellChangeTimes->{{3.565392011654352*^9, 3.565392039037265*^9}, 
   3.617946360875455*^9, {3.617949456674674*^9, 3.617949473646977*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other computations", "Section",
 CellChangeTimes->{{3.565283350437929*^9, 3.5652833798428*^9}, {
  3.6177033732091007`*^9, 3.617703385351859*^9}}],

Cell[CellGroupData[{

Cell["\<\
Boundary conditions and pinning / Pebble basis modes\
\>", "Subsection",
 CellChangeTimes->{{3.565392011654352*^9, 3.565392039037265*^9}, 
   3.617946360875455*^9, {3.617950010382969*^9, 3.617950029364482*^9}, {
   3.617950124615641*^9, 3.617950134144931*^9}, {3.6179560271366262`*^9, 
   3.617956046906361*^9}}],

Cell["\<\
If one wants to compute the floppy modes of a system with additional \
constraints, this can be done by adjoining new rows to the rigidity matrix.  \
\
\>", "Text",
 CellChangeTimes->{{3.617956738920192*^9, 3.6179568053444977`*^9}}],

Cell[BoxData[
 RowBox[{"trianglepin1xR", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"triangleR", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6179571466272793`*^9, 3.617957195746605*^9}}],

Cell[BoxData[
 RowBox[{"NullSpace", "[", "trianglepin1xR", "]"}]], "Input",
 CellChangeTimes->{{3.617957199405148*^9, 3.6179572027914543`*^9}}],

Cell[CellGroupData[{

Cell["Boundary vertex indices", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.617943866349478*^9, 
  3.617943868420836*^9}, {3.617943950712166*^9, 3.617943962830038*^9}, {
  3.6179463592761927`*^9, 3.6179463678761883`*^9}, {3.617956199426537*^9, 
  3.617956203429017*^9}}],

Cell[TextData[{
 "Often additional constraints on a framework derive from boundary \
conditions.  The function ",
 StyleBox["BoundaryVerts",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " can be used to get boundary vertex indices of frameworks derived from ",
 StyleBox["MakePerLattice",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["MakePerLatticeEdges",
  FontFamily->"Courier",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.617956808946415*^9, 3.6179568153209*^9}, {
  3.617957235490817*^9, 3.617957275667583*^9}, {3.617957352585681*^9, 
  3.617957380184819*^9}, {3.617957512642171*^9, 3.6179575224801617`*^9}, {
  3.6179580788583*^9, 3.617958136411414*^9}, {3.617958323059689*^9, 
  3.617958323428994*^9}, {3.6179612353665543`*^9, 3.617961248686133*^9}}],

Cell["\<\
One inputs the edge data, the size of the covering, and the vertex indices \
(in a single unit cell) that go on each face.  Since the overall structure is \
that of a hypercube, there is a \[OpenCurlyDoubleQuote]front\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]back\
\[CloseCurlyDoubleQuote] face per dimension: for example if the basis vectors \
are {{2,0},{0,2}}, then the list of faces is {{left, right},{bottom,top}}: \
\>", "Text",
 CellChangeTimes->{{3.6179612642740717`*^9, 3.617961317605854*^9}, {
  3.617961446879614*^9, 3.617961544935664*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"squarebv", "=", 
  RowBox[{"BoundaryVerts", "[", 
   RowBox[{"squareedgedat", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.6179606923532352`*^9, 3.617960693785947*^9}, {
  3.617960924607217*^9, 3.617960925436371*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "20", ",", "22", ",", "24"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "9", ",", "10", ",", "17", ",", "18"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "15", ",", "16", ",", "23", ",", "24"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.617960291401922*^9, 3.6179603628091793`*^9}, 
   3.617960649409439*^9, 3.61796069511233*^9, 3.617960925768299*^9, {
   3.617961368964417*^9, 3.617961372913179*^9}, {3.6179614067441273`*^9, 
   3.617961409265441*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PlotPacking", "[", 
    RowBox[{
     RowBox[{"squarecover", "[", 
      RowBox[{"[", 
       RowBox[{"squarebv", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "\[Rule]", ".1"}], ",", "Green"}], "}"}]}], "]"}],
    ",", 
   RowBox[{"PlotPacking", "[", 
    RowBox[{"squarecover", ",", "squarecovernonperiodicedgedat"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6179607222128973`*^9, 3.6179607399164333`*^9}, {
  3.617960937879003*^9, 3.6179610091004877`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pebble modes", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.617943866349478*^9, 
  3.617943868420836*^9}, {3.617943950712166*^9, 3.617943962830038*^9}, {
  3.6179463592761927`*^9, 3.6179463678761883`*^9}, {3.617956199426537*^9, 
  3.617956203429017*^9}, {3.617956237290607*^9, 3.6179562378216867`*^9}, {
  3.6179574489665117`*^9, 3.617957450286158*^9}}],

Cell[TextData[{
 "Once we have determined a set of boundary vertices, we can pin them by \
adding new constraints to the system.  The linearizations of these \
constraints can be added directly to the rigidity matrix as new rows, \
generated by ",
 StyleBox["ConstraintRows",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ".  This function takes as input first the total number of vertices in the \
system, then a list of vertex indices, and finally a template for the \
constraints at each pinned vertex. Then ",
 StyleBox["ConstraintRows",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " outputs a number of rows that can be directly added to the rigidity matrix:"
}], "Text",
 CellChangeTimes->{{3.617961566321475*^9, 3.617961582230337*^9}, {
  3.61796190759064*^9, 3.6179619118791647`*^9}, {3.617962186139435*^9, 
  3.617962224971287*^9}, {3.617962930032868*^9, 3.6179630452449017`*^9}, {
  3.617963075705484*^9, 3.617963079711191*^9}, {3.617963267134492*^9, 
  3.617963318525166*^9}, {3.6179652894652777`*^9, 3.617965340142703*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"newconstraints1", "=", 
   RowBox[{"ConstraintRows", "[", 
    RowBox[{
     RowBox[{"Length", "[", "squarecover", "]"}], ",", 
     RowBox[{"squarebv", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newrigmat", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"RigidityMatrix", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "squarecover", ",", 
       RowBox[{"{", "}"}], ",", "squarecovernonperiodicedgedat"}], "]"}], ",",
      "newconstraints1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"NullSpace", "[", "newrigmat", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6179653420909443`*^9, 3.6179653734718533`*^9}, {
  3.6179654059531*^9, 3.617965467036902*^9}}],

Cell[TextData[{
 "There\[CloseCurlyQuote]s an interpretation for the pebbles in the pebble \
game as added constraints which cause an independent framework to become ",
 StyleBox["isostatic",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " in the sense of being minimally pinned down."
}], "Text",
 CellChangeTimes->{{3.6179622271563597`*^9, 3.617962277652495*^9}, {
  3.617962588494698*^9, 3.6179626025402184`*^9}}],

Cell["\<\
Given such a pinning, if we remove one constraint, the system gains a single \
floppy mode.  Thus we can associate floppy modes with pin constraints of such \
a minimally pinned system.  These are what I call the pebble modes of the \
system.\
\>", "Text",
 CellChangeTimes->{{3.617962609036841*^9, 3.617962686082402*^9}}]
}, Open  ]]
}, Open  ]],

Cell["Linear response and stresses", "Subsection",
 CellChangeTimes->{{3.565392011654352*^9, 3.565392039037265*^9}, 
   3.617946360875455*^9, {3.617950010382969*^9, 3.617950029364482*^9}, {
   3.617950124615641*^9, 3.617950134144931*^9}}],

Cell["Local \[OpenCurlyDoubleQuote]circle\[CloseCurlyDoubleQuote] modes", \
"Subsection",
 CellChangeTimes->{{3.565392011654352*^9, 3.565392039037265*^9}, 
   3.617946360875455*^9, {3.617950010382969*^9, 3.617950029364482*^9}}],

Cell[CellGroupData[{

Cell["\<\
Brillouin zone / topological invariants\
\>", "Subsection",
 CellChangeTimes->{{3.565392011654352*^9, 3.565392039037265*^9}, 
   3.617946360875455*^9}],

Cell[TextData[{
 "Kane and Lubensky [KL14] defined some quantities that determine the edge \
behavior of ",
 StyleBox["isostatic",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " lattices."
}], "Text",
 CellChangeTimes->{{3.61794396432638*^9, 3.61794398825072*^9}, {
  3.617944051287917*^9, 3.617944104652678*^9}}],

Cell[CellGroupData[{

Cell["Net dipole", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.617943866349478*^9, 
  3.617943868420836*^9}, {3.617943950712166*^9, 3.617943962830038*^9}, {
  3.6179463592761927`*^9, 3.6179463678761883`*^9}}],

Cell[TextData[{
 "In order to ensure that the quantities further below make sense, we must \
check what the contribution of our choice of fundamental domain is.  This is \
given by the \[OpenCurlyDoubleQuote]net dipole\[CloseCurlyDoubleQuote] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "0"], ":"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.617944181868828*^9, 3.6179443387924356`*^9}}],

Cell[BoxData[{
 RowBox[{"NetDipole", "[", 
  RowBox[{"squarepos", ",", "squarebasis", ",", "squareedgedat"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NetDipole", "[", 
  RowBox[{"cubepos", ",", "cubebasis", ",", "cubeedgedat"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.6179447751822853`*^9, 3.617944815384101*^9}, {
  3.6179451799600267`*^9, 3.617945204817896*^9}}],

Cell["\<\
With a different choice of the edge data, this can often be made to vanish.\
\>", "Text",
 CellChangeTimes->{{3.617945288781342*^9, 3.6179453017715473`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"squareedgedatbalanced", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NetDipole", "[", 
  RowBox[{"squarepos", ",", "squarebasis", ",", "squareedgedatbalanced"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6179453043857822`*^9, 3.617945341140317*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Visualizing the determinant in a 2D Brillouin zone\
\>", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.617943866349478*^9, 
  3.617943868420836*^9}, {3.617943950712166*^9, 3.617943962830038*^9}, {
  3.6179463592761927`*^9, 3.617946392259803*^9}, {3.617946479938772*^9, 
  3.617946482214526*^9}, {3.6179472534050913`*^9, 3.617947261476214*^9}, {
  3.6179475601483297`*^9, 3.6179475611943493`*^9}}],

Cell[TextData[{
 StyleBox["BandPlot",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " may be used to make a contour plot of log|det R| in the Brillouin zone."
}], "Text",
 CellChangeTimes->{{3.6179472664126453`*^9, 3.617947342886507*^9}}],

Cell[TextData[{
 "Note the use of the function ",
 StyleBox["NRigidityMatrix",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " which forces ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to evaluate the determinant only after numerical values are inserted for \
zx, zy, which can improve the numerical accuracy."
}], "Text",
 CellChangeTimes->{{3.618120212686017*^9, 3.618120282018888*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"poly", "=", 
    RowBox[{"Det", "[", 
     RowBox[{"NRigidityMatrix", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zx", ",", "zy"}], "}"}], ",", "squarepos2", ",", 
       "squarebasis", ",", "squareedgedatbalanced"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"BandPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"zx", ",", "zy"}], "}"}], ",", 
   RowBox[{"Log", "[", 
    RowBox[{"Abs", "[", "poly", "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BandPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"zx", ",", "zy"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", "poly", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"Im", "[", "poly", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.617947550110404*^9, 3.617947554007531*^9}, {
   3.617947597071219*^9, 3.617947610717393*^9}, {3.617947647223126*^9, 
   3.617947701913658*^9}, {3.617947782759036*^9, 3.6179478143538313`*^9}, {
   3.617947845220573*^9, 3.617947881885648*^9}, {3.617947913362732*^9, 
   3.617948001564188*^9}, {3.6179482594077997`*^9, 3.617948261490904*^9}, {
   3.617948350908333*^9, 3.6179483678634987`*^9}, 3.618120201969548*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Winding numbers / polarization", "Subsubsection",
 CellChangeTimes->{{3.565385714290554*^9, 3.565385722298304*^9}, {
  3.617705294329216*^9, 3.6177052960255213`*^9}, {3.617943866349478*^9, 
  3.617943868420836*^9}, {3.617943950712166*^9, 3.617943962830038*^9}, {
  3.6179463592761927`*^9, 3.617946392259803*^9}, {3.617946479938772*^9, 
  3.617946482214526*^9}}],

Cell[TextData[{
 StyleBox["KLWinding",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " computes the winding of the phase of the det R on different paths in the \
Brillouin zone."
}], "Text",
 CellChangeTimes->{{3.617945353203721*^9, 3.617945354017006*^9}, {
  3.617945605296479*^9, 3.617945638631688*^9}, {3.617946497024438*^9, 
  3.617946517005259*^9}}],

Cell[BoxData[
 RowBox[{"KLWinding", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"zx", ",", "zy"}], "}"}], ",", "squarepos", ",", "squarebasis", 
   ",", "squareedgedatbalanced", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"zx", "\[Rule]", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", 
        RowBox[{"(", 
         RowBox[{".3", "+", 
          RowBox[{".01", 
           RowBox[{"Cos", "[", " ", "t", "]"}]}]}], ")"}]}], "]"}]}], ",", 
     RowBox[{"zy", "\[Rule]", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", 
        RowBox[{"(", 
         RowBox[{".3", "+", 
          RowBox[{".01", 
           RowBox[{"Sin", "[", " ", "t", "]"}]}]}], ")"}]}], "]"}]}]}], "}"}],
    ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.617945969661577*^9, 3.617946053101458*^9}, {
  3.6179461869506283`*^9, 3.617946208628697*^9}}],

Cell[TextData[{
 "The function ",
 StyleBox["KLPolarization",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " computes a topological polarization vector by putting together the winding \
along orthogonal cycles in the Brillouin zone starting at a given point ",
 StyleBox["cycleorigin:",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.6179464853430433`*^9, 3.6179464916607733`*^9}, {
  3.617946522709322*^9, 3.617946527997099*^9}, {3.617946910684669*^9, 
  3.6179469674059753`*^9}}],

Cell[BoxData[
 RowBox[{"KLPolarization", "[", 
  RowBox[{"squarepos2", ",", "squarebasis", ",", "squareedgedatbalanced", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617946969423463*^9, 3.617946981222993*^9}, {
   3.617947047660746*^9, 3.6179470594272547`*^9}, 3.617947104518441*^9, {
   3.617947141225319*^9, 3.617947162183131*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.5652858166453648`*^9, 3.565285827435554*^9}, {
  3.5653955826779118`*^9, 3.5653955843628893`*^9}, {3.565452885477524*^9, 
  3.5654528865129347`*^9}, {3.617950077492736*^9, 3.617950078787414*^9}}],

Cell["\<\
[KL14] C.L. Kane and T.C. Lubensky, Nature Physics 2014\
\>", "Text",
 CellChangeTimes->{{3.617944016121313*^9, 3.6179440385441647`*^9}}]
}, Open  ]]
}, Open  ]]
},
EvaluationCompletionAction->{},
WindowSize->{1051, 692},
WindowMargins->{{190, Automatic}, {Automatic, 25}},
Background->RGBColor[0.965927, 0.985016, 0.999908],
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], CellFrame -> {{0, 0}, {2, 0}}, TextAlignment -> 
    Center, TextJustification -> 0.5, FontFamily -> "Mathematica5", FontSize -> 
    64, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False}, FontColor -> 
    RGBColor[0.03530937666895552, 0.14023041123064012`, 0.618951705195697]], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {2, 0}}, CellDingbat -> None, 
    FontFamily -> "Palatino Bold Italic", FontSize -> 48, FontWeight -> 
    "Plain", FontSlant -> "Plain", FontColor -> 
    RGBColor[0.6, 0.11371023117418173`, 0.17253376058594644`]], 
   Cell[
    StyleData["Subsection"], CellDingbat -> "\[GrayCircle]", FontFamily -> 
    "Palatino Bold", FontSize -> 36, FontWeight -> "Plain", FontSlant -> 
    "Plain", FontColor -> 
    RGBColor[0.07238879987792783, 0.20151064316777295`, 0.7329213397421225]], 
   
   Cell[
    StyleData["Subsubsection"], CellDingbat -> "\[FilledDiamond]", FontFamily -> 
    "Palatino", FontSize -> 24, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontColor -> 
    RGBColor[0.6902876325627527, 0.1539482719157702, 0.2247348744945449]], 
   Cell[
    StyleData["Input"], PageWidth -> WindowWidth, 
    CellFrame -> {{2, 2}, {0, 2}}, CellMargins -> {{66, 10}, {0, 10}}, 
    FontFamily -> "Times", FontSize -> 24, FontWeight -> "Bold", FontSlant -> 
    "Plain", Background -> RGBColor[0.960418, 0.955352, 0.96054]], 
   Cell[
    StyleData["Output"], CellFrame -> {{2, 2}, {2, 0}}, 
    CellMargins -> {{66, 10}, {10, 0}}, FontFamily -> "Times", FontSize -> 24,
     FontWeight -> "Plain", FontSlant -> "Plain", Background -> 
    RGBColor[0.816251, 0.81622, 0.816236]], 
   Cell[
    StyleData["Text"], FontFamily -> "Georgia", FontSize -> 24, FontWeight -> 
    "Plain", FontSlant -> "Plain"], 
   Cell[
    StyleData["Item"], CellDingbat -> "\[FilledSquare]", FontFamily -> 
    "Palatino Italic", FontSize -> 24, FontWeight -> "Plain", FontSlant -> 
    "Plain", FontColor -> RGBColor[0., 0., 0.]], 
   Cell[
    StyleData["$Output"], CellFrame -> {{2, 2}, {0, 0}}, MenuSortingValue -> 
    10000, FontFamily -> "Times", FontSize -> 24, FontWeight -> "Plain", 
    FontSlant -> "Plain", Background -> 
    RGBColor[0.774136, 0.774105, 0.774121]]}, Visible -> False, 
  FrontEndVersion -> 
  "9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, 2013)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 735, 15, 196, "Title"],
Cell[CellGroupData[{
Cell[1182, 34, 111, 1, 102, "Section"],
Cell[1296, 37, 477, 11, 75, "Text"],
Cell[1776, 50, 580, 12, 82, "Input"],
Cell[2359, 64, 478, 10, 43, "Text"],
Cell[2840, 76, 217, 5, 53, "Input"],
Cell[3060, 83, 147, 2, 43, "Text"],
Cell[3210, 87, 1086, 28, 234, "Input"],
Cell[4299, 117, 629, 14, 75, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4965, 136, 103, 1, 102, "Section"],
Cell[CellGroupData[{
Cell[5093, 141, 319, 4, 60, "Subsection"],
Cell[CellGroupData[{
Cell[5437, 149, 156, 2, 39, "Subsubsection"],
Cell[5596, 153, 328, 9, 76, "Text"],
Cell[5927, 164, 972, 17, 171, "Text"],
Cell[6902, 183, 204, 4, 43, "Text"],
Cell[7109, 189, 807, 23, 84, "Input"],
Cell[7919, 214, 215, 4, 43, "Text"],
Cell[8137, 220, 463, 13, 53, "Input"],
Cell[8603, 235, 291, 8, 43, "Text"],
Cell[8897, 245, 257, 5, 53, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9191, 255, 210, 3, 39, "Subsubsection"],
Cell[9404, 260, 228, 7, 43, "Text"],
Cell[9635, 269, 700, 13, 84, "Input"],
Cell[10338, 284, 225, 7, 43, "Text"],
Cell[10566, 293, 1902, 58, 204, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12505, 356, 208, 3, 39, "Subsubsection"],
Cell[12716, 361, 346, 6, 107, "Text"],
Cell[13065, 369, 328, 9, 75, "Text"],
Cell[13396, 380, 521, 10, 53, "Input"],
Cell[13920, 392, 263, 5, 53, "Input"],
Cell[14186, 399, 176, 4, 43, "Text"],
Cell[14365, 405, 138, 2, 53, "Input"],
Cell[14506, 409, 172, 3, 53, "Input"],
Cell[14681, 414, 163, 2, 43, "Text"],
Cell[14847, 418, 426, 8, 84, "Input"],
Cell[15276, 428, 219, 5, 53, "Input"],
Cell[15498, 435, 436, 8, 139, "Text"],
Cell[15937, 445, 596, 13, 144, "Input"],
Cell[16536, 460, 425, 9, 114, "Input"],
Cell[16964, 471, 291, 10, 43, "Text"],
Cell[17258, 483, 717, 16, 114, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18024, 505, 158, 2, 60, "Subsection"],
Cell[CellGroupData[{
Cell[18207, 511, 156, 2, 39, "Subsubsection"],
Cell[18366, 515, 337, 6, 107, "Text"],
Cell[18706, 523, 1400, 44, 144, "Input"],
Cell[20109, 569, 575, 14, 109, "Text"],
Cell[20687, 585, 829, 25, 114, "Input"],
Cell[21519, 612, 1657, 51, 177, "Text"],
Cell[23179, 665, 7366, 226, 504, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30582, 896, 206, 3, 39, "Subsubsection"],
Cell[30791, 901, 420, 12, 107, "Text"],
Cell[31214, 915, 925, 16, 174, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32176, 936, 210, 3, 39, "Subsubsection"],
Cell[32389, 941, 214, 4, 43, "Text"],
Cell[32606, 947, 340, 8, 84, "Input"],
Cell[32949, 957, 154, 2, 43, "Text"],
Cell[33106, 961, 269, 6, 84, "Input"],
Cell[33378, 969, 125, 2, 53, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33540, 976, 541, 9, 39, "Subsubsection"],
Cell[34084, 987, 348, 9, 75, "Text"],
Cell[34435, 998, 351, 10, 53, "Input"],
Cell[34789, 1010, 1510, 36, 204, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36360, 1053, 222, 5, 102, "Section"],
Cell[36585, 1060, 206, 4, 60, "Subsection"],
Cell[36794, 1066, 256, 5, 52, "Subsection"],
Cell[CellGroupData[{
Cell[37075, 1075, 293, 4, 52, "Subsection"],
Cell[37371, 1081, 359, 6, 107, "Text"],
Cell[37733, 1089, 296, 11, 43, "Text"],
Cell[38032, 1102, 633, 16, 114, "Input"],
Cell[38668, 1120, 286, 7, 84, "Input"],
Cell[38957, 1129, 275, 5, 75, "Text"],
Cell[39235, 1136, 365, 9, 84, "Input"],
Cell[39603, 1147, 192, 4, 53, "Input"]
}, Open  ]],
Cell[39810, 1154, 189, 2, 60, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40036, 1161, 152, 2, 102, "Section"],
Cell[CellGroupData[{
Cell[40213, 1167, 322, 6, 60, "Subsection"],
Cell[40538, 1175, 242, 5, 75, "Text"],
Cell[40783, 1182, 317, 8, 53, "Input"],
Cell[41103, 1192, 143, 2, 53, "Input"],
Cell[CellGroupData[{
Cell[41271, 1198, 362, 5, 39, "Subsubsection"],
Cell[41636, 1205, 796, 19, 107, "Text"],
Cell[42435, 1226, 573, 9, 139, "Text"],
Cell[CellGroupData[{
Cell[43033, 1239, 709, 22, 84, "Input"],
Cell[43745, 1263, 817, 22, 84, "Output"]
}, Open  ]],
Cell[44577, 1288, 672, 19, 114, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45286, 1312, 450, 6, 39, "Subsubsection"],
Cell[45739, 1320, 1043, 20, 235, "Text"],
Cell[46785, 1342, 901, 23, 204, "Input"],
Cell[47689, 1367, 417, 9, 107, "Text"],
Cell[48109, 1378, 332, 6, 107, "Text"]
}, Open  ]]
}, Open  ]],
Cell[48468, 1388, 238, 3, 60, "Subsection"],
Cell[48709, 1393, 227, 3, 52, "Subsection"],
Cell[CellGroupData[{
Cell[48961, 1400, 161, 4, 52, "Subsection"],
Cell[49125, 1406, 315, 9, 75, "Text"],
Cell[CellGroupData[{
Cell[49465, 1419, 300, 4, 39, "Subsubsection"],
Cell[49768, 1425, 450, 10, 109, "Text"],
Cell[50221, 1437, 371, 8, 84, "Input"],
Cell[50595, 1447, 167, 3, 43, "Text"],
Cell[50765, 1452, 1872, 59, 174, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52674, 1516, 496, 8, 39, "Subsubsection"],
Cell[53173, 1526, 241, 6, 43, "Text"],
Cell[53417, 1534, 401, 11, 107, "Text"],
Cell[53821, 1547, 1309, 34, 174, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55167, 1586, 367, 5, 39, "Subsubsection"],
Cell[55537, 1593, 357, 9, 75, "Text"],
Cell[55897, 1604, 832, 24, 144, "Input"],
Cell[56732, 1630, 495, 12, 107, "Text"],
Cell[57230, 1644, 430, 9, 84, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57721, 1660, 247, 3, 102, "Section"],
Cell[57971, 1665, 147, 3, 43, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

